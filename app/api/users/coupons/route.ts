import { NextRequest, NextResponse } from 'next/server';

export async function GET(request: NextRequest) {
  try {
    const backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:8000';
    const url = new URL(request.url);
    const userId = url.searchParams.get('userId');
    
    if (!userId) {
      return NextResponse.json(
        { success: false, error: 'User ID is required' },
        { status: 400 }
      );
    }
    
    // Get all coupons and filter for user-specific ones
    const response = await fetch(`${backendUrl}/forms/coupons`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (!response.ok) {
      return NextResponse.json(
        { success: false, error: 'Failed to fetch coupons' },
        { status: response.status }
      );
    }

    const data = await response.json();
    
    if (data.success) {
      // Filter coupons that are available to this user
      // Auto-generated coupons have user-specific codes like "DISCOUNT10-123" where 123 is userId
      const userCoupons = data.coupons.filter((coupon: any) => {
        // If it's an auto-generated coupon, check if it's for this user
        if (coupon.autoGenerated) {
          return coupon.code.endsWith(`-${userId}`);
        }
        // If it's a manual coupon, it's available to all users
        return !coupon.autoGenerated && coupon.isActive;
      });
      
      return NextResponse.json({
        success: true,
        coupons: userCoupons,
        count: userCoupons.length
      });
    }
    
    return NextResponse.json(data);
  } catch (error) {
    console.error('Error fetching user coupons:', error);
    return NextResponse.json(
      { success: false, error: 'Internal server error' },
      { status: 500 }
    );
  }
} 