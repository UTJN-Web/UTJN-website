version: "3.8"

services:
  caddy:
    image: caddy:2-alpine
    depends_on: [web, api]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: always

  web:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    environment:
      NODE_ENV: "production"
      NEXT_PUBLIC_BASE_URL: "https://uoftjn.com"
      NEXT_PUBLIC_BACKEND_URL: "http://api:8000"
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_PUBLIC_SQUARE_APPLICATION_ID: "${NEXT_PUBLIC_SQUARE_APPLICATION_ID}"
      NEXT_PUBLIC_SQUARE_LOCATION_ID: "${NEXT_PUBLIC_SQUARE_LOCATION_ID}"
      SQUARE_ACCESS_TOKEN: "${SQUARE_ACCESS_TOKEN}"
    env_file:
      - .env
    expose:
      - "3000"
    restart: always

  api:
    build:
      context: .
      dockerfile: backend.Dockerfile
    environment:
      CORS_ORIGINS: "https://uoftjn.com"
      BACKEND_URL:  "https://uoftjn.com/api"
      DATABASE_URL: "${DATABASE_URL}"
      AWS_DEFAULT_REGION: "us-east-2"
      COGNITO_REGION: "${COGNITO_REGION}"
      COGNITO_POOL_ID: "${COGNITO_POOL_ID}"
      COGNITO_CLIENT_ID: "${COGNITO_CLIENT_ID}"
      COGNITO_CLIENT_SECRET: "${COGNITO_CLIENT_SECRET}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - uploads:/app/uploads
    restart: always

volumes:
  uploads: {}
  caddy_data: {}
  caddy_config: {}
